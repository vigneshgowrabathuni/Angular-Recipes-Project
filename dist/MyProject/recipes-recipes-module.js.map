{"version":3,"sources":["webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{ recipe.name }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 250px;\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ recipe.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\" appDropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Recipe\\n        <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li>\\n          <a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer;\\\">To Shopping List</a>\\n        </li>\\n        <li>\\n          <a style=\\\"cursor: pointer;\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a>\\n        </li>\\n        <li>\\n          <a style=\\\"cursor: pointer;\\\" (click)=\\\"onDeleteRecipe()\\\">Delete Recipe</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ recipe.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\n        {{ ingredient.name }} - {{ ingredient.amount }}\\n      </li>\\n\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Recipe } from \"../recipe.model\";\nimport { RecipeService } from \"../recipe.service\";\nimport { Ingredient } from \"../../shared/ingredient.model\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-recipe-detail\",\n  templateUrl: \"./recipe-detail.component.html\",\n  styleUrls: [\"./recipe-detail.component.css\"]\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          console.log(this.id);\n\n          this.recipe = this.recipeService.getRecipe(this.id);\n          console.log(this.recipe);\n        }\n      );\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\ntextarea.ng-invalid.ng-touched\\n {\\n  border: 1px solid red;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image URL</label>\\n            <input type=\\\"text\\\" id=\\\"imagePath\\\" class=\\\"form-control\\\" formControlName=\\\"imagePath\\\" #imagePath>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsice\\\" style=\\\"max-height: 250px;\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"6\\\" formControlName=\\\"description\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let ingredientCtrl of recipeForm.get('ingredients').controls; let i = index\\\" [formGroupName]=\\\"i\\\"\\n            style=\\\"margin-top: 10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button class=\\\"btn btn-danger\\\">X\\n              </button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '../../../../node_modules/@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { RecipeService } from '../recipe.service';\nimport { Ingredient } from '../../shared/ingredient.model';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  constructor(private route: ActivatedRoute, private recipeService: RecipeService, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.initForm();\n        }\n      );\n  }\n\n  onSubmit() {\n    const newRecipe = new Recipe(\n      this.recipeForm.value['name'],\n      this.recipeForm.value['description'],\n      this.recipeForm.value['imagePath'],\n      this.recipeForm.value['ingredients']);\n\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, newRecipe);\n    } else {\n      this.recipeService.addRecipe(newRecipe);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    const recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (const ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<a style=\\\"cursor: pointer;\\\" [routerLink]=\\\"[index]\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ recipe.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ recipe.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{ recipe.description }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 50px\\\">\\n  </span>\\n</a>\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { Recipe } from \"../../recipe.model\";\n\n@Component({\n  selector: \"app-recipe-item\",\n  templateUrl: \"./recipe-item.component.html\",\n  styleUrls: [\"./recipe-item.component.css\"]\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n\n  ngOnInit() { }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">\\n      New Recipe\\n    </button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-recipe-item *ngFor=\\\"let recipeEl of recipes; let i = index\\\" [recipe]=\\\"recipeEl\\\" [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Recipe } from \"../recipe.model\";\nimport { RecipeService } from \"../recipe.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-recipe-list\",\n  templateUrl: \"./recipe-list.component.html\",\n  styleUrls: [\"./recipe-list.component.css\"]\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(private recipeService: RecipeService,\n    private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.subscription = this.recipeService.recipesChanged\n      .subscribe(\n        (recipes: Recipe[]) => {\n          this.recipes = recipes;\n        }\n      );\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>Please select a Recipe!</h3>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { AuthGuard } from \"../auth/auth-guard.service\";\r\n\r\nconst recipesRoutes: Routes = [\r\n    {\r\n        path: '', component: RecipesComponent, children: [\r\n          { path: '', component: RecipeStartComponent },\r\n          { path: 'new', component: RecipeEditComponent, canActivate: [AuthGuard]},\r\n          { path: ':id', component: RecipeDetailComponent},\r\n          { path: ':id/edit', component: RecipeEditComponent, canActivate: [AuthGuard] },\r\n        ]\r\n      },\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(recipesRoutes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class RecipesRoutingModule {\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list (recipeWasSelected)=\\\"selectedRecipe = $event\\\"></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Component({\n  selector: \"app-recipes\",\n  templateUrl: \"./recipes.component.html\",\n  styleUrls: [\"./recipes.component.css\"]\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipesRoutingModule } from './recipes-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RecipesComponent,\r\n        RecipeStartComponent,\r\n        RecipeDetailComponent,\r\n        RecipeListComponent,\r\n        RecipeEditComponent,\r\n        RecipeItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RecipesRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class RecipesModule {\r\n\r\n}"],"sourceRoot":""}